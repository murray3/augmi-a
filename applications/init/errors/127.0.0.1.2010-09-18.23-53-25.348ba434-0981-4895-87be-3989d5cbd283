(dp1
S'output'
p2
S''
sS'layer'
p3
S'C:\\APPS\\augmi-a\\applications\\init/models/db.py'
p4
sS'code'
p5
S'# coding: utf8\nimport uuid\nimport datetime\nimport time; # \nnow=datetime.datetime.today() \n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n#########################################################################\n\nif request.env.web2py_runtime_gae:            # if running on Google App Engine\n    db = DAL(\'gae\')                           # connect to Google BigTable\n    session.connect(request, response, db=db) # and store sessions and tickets there\n    ### or use the following lines to store sessions in Memcache\n    # from gluon.contrib.memdb import MEMDB\n    # from google.appengine.api.memcache import Client\n    # session.connect(request, response, db=MEMDB(Client())\nelse:                                         # else use a normal relational database\n    db = DAL(\'sqlite://storage.sqlite\')       # if not, use SQLite or other DB\n## if no need for session\n# session.forget()\n\n#########################################################################\n## Here is sample code if you need for \n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - crud actions\n## comment/uncomment as needed\nfrom applications.init.modules.rpxauth import RPXAuth\nfrom gluon.tools import *\nauth=RPXAuth(globals(),db)                      # authentication/authorization\n#auth.settings.hmac_key=\'sha512:dcda9600-d23b-4983-9951-d20342365db6\'   \nauth.settings.actions_disabled=[\'register\']                   # \nauth.settings.rpx_key=\'4ef7f97b6cb5a679e4c5c486e1b7da786b88219d\'\nauth.settings.rpx_realm = \'augmi\'\nauth.settings.rpx_language_preference=\'en\'\nauth.settings.rpx_login_domain= \'http://localhost:8000\' # \'http://www.augmi-a.appspot.com\'\nauth.settings.table_profile_name = \'profile\'\nauth.settings.expiration = 2*3600 # 2 timer\n# auth.settings.mailer=mail                     # for user email verification\nauth.define_tables()                         # creates all needed table  \ncrud=Crud(globals(),db)                      # for CRUD helpers using auth\ncrud.settings.auth=auth  \n# crud.settings.auth=auth                      # enforces authorization on crud\n# mail=Mail()                                  # mailer\n# mail.settings.server=\'smtp.gmail.com:587\'    # your SMTP server\n# mail.settings.sender=\'you@gmail.com\'         # your email\n# mail.settings.login=\'username:password\'      # your credentials or None\n# auth.settings.mailer=mail                    # for user email verification\n# auth.settings.registration_requires_verification = True\n# auth.settings.registration_requires_approval = True\n# auth.messages.verify_email = \\\n#  \'Click on the link http://.../user/verify_email/%(key)s to verify your email\'\n## more options discussed in gluon/tools.py\n#########################################################################\n\n#########################################################################\n## Define your tables below, for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n# from applications.init.modules.rpxauth import RPXAuth\n# rpxAuth = RPXAuth(auth)\n# rpxAuth.embed = True\n# rpxAuth.allow_local = False\n# rpxAuth.api_key = "4ef7f97b6cb5a679e4c5c486e1b7da786b88219d"\n# rpxAuth.realm = "augmi"\n# rpxAuth.token_url = "http://localhost:8000/init/default/myAugmi"\n\n\nresponse.files.append("http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.js")\n#response.files.append("http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/ui-darkness/jquery-ui.css")\n\n\ndef slider_widget(f,v,**attr):\n    wrapper = DIV(_id="slider_wrapper",_style="margin-left:30px;margin-bottom:5px;width: 20px;align:center;text-align:center;color:black;")\n    inp = SQLFORM.widgets.string.widget(f,v, **attr)\n    sld = DIV(_id=\'slider_\' + inp[\'_id\'])\n    sldval = SPAN(inp[\'_value\'],_id=sld[\'_id\']+\'_val\')\n    scr1 = "jQuery(\'#%s\').hide();" % inp[\'_id\']\n    scr2 = "jQuery(\'#%s\').val(ui.value);jQuery(\'#%s\').text(ui.value);" % (inp[\'_id\'], sldval[\'_id\'])\n    jqscr = SCRIPT(scr1,"jQuery(\'#%s\').slider({orientation: \'vertical\', min: 1, max: 7, value: \'%s\',stop: function(event, ui) {%s}});" % \\\n                    (sld[\'_id\'],inp[\'_value\'],scr2),_type="text/javascript")\n    wrapper.components.extend([sld,sldval,inp,jqscr])\n    return wrapper\n    \ndef slider_widget2(f,v,**attr):\n    wrapper = DIV(_id="slider_wrapper",_style="margin-left:5px;margin-bottom:5px;width: 300px;align:center;text-align:center;color:black;")\n    inp = SQLFORM.widgets.string.widget(f,v, **attr)\n    sld = DIV(_id=\'slider_\' + inp[\'_id\'])\n    sldval = SPAN(inp[\'_value\'],_id=sld[\'_id\']+\'_val\',_style="color:yellow;")\n    scr1 = "jQuery(\'#%s\').hide();" % inp[\'_id\']\n    scr2 = "jQuery(\'#%s\').val(ui.value);jQuery(\'#%s\').text(ui.value);" % (inp[\'_id\'], sldval[\'_id\'])\n    jqscr = SCRIPT(scr1,"jQuery(\'#%s\').slider({orientation: \'horizontal\', min: 1, max: 10, value: \'%s\',stop: function(event, ui) {%s}});" % \\\n                    (sld[\'_id\'],inp[\'_value\'],scr2),_type="text/javascript")\n    wrapper.components.extend([sld,sldval,inp,jqscr])\n    return wrapper\n    \n# def my_string_widget(field,value):\n   # wrapper = INPUT(_name=field.name,_id="%s_%s\\" % (field._tablename, field.name),_class=field.type,_value=value,requires=field.requires)\n    # return wrapper\n\n\ndb.define_table(\'mindbeat\',\n    SQLField(\'uuid\',length=128,writable=False,default=str(uuid.uuid4())),\n    SQLField(\'timestamp\',\'datetime\',default=now),\n    SQLField(\'user_id\',),\n    SQLField(\'user_name\',),\n    SQLField(\'provider\',),\n    SQLField(\'pic_url\',),\n    SQLField(\'active\',\'boolean\',default=False),\n    SQLField(\'Mood\',\'integer\',label=T(\'Mood\'),widget=slider_widget,default=4),\n    SQLField(\'Stress\',\'integer\',label=T(\'Stress\'),widget=slider_widget,default=4),\n    SQLField(\'Focus\',\'integer\',label=T(\'Focus\'),widget=slider_widget,default=4),\n    SQLField(\'Energy\',\'integer\',label=T(\'Energy\'),widget=slider_widget,default=4),\n    SQLField(\'UTD\',\'integer\',label=T(\'Up-To-Date\'),widget=slider_widget,default=4),\n    SQLField(\'Optimism\',\'integer\',label=T(\'Optimism\'),widget=slider_widget,default=4),\n    SQLField(\'html\',\'string\'),\n    SQLField(\'Location\',\'string\'),\n    SQLField(\'Message\',\'string\',label=T(\'Micro-Blog\'),widget=SQLFORM.widgets.string.widget,default=""))\n    \ndb.define_table(\'q\',\n    SQLField(\'uuid\',length=128,writable=False,default=str(uuid.uuid4())),\n    SQLField(\'timestamp\',\'datetime\',default=now),\n    SQLField(\'give_user_id\',length=128),\n    SQLField(\'take_user_id\',length=128),\n    SQLField(\'message_give\',\'string\'),\n    SQLField(\'message_take\',\'string\'),\n    SQLField(\'message_admin\',\'string\'),\n    SQLField(\'q\',\'integer\',label=T(\'EMP\'),widget=slider_widget2,default=1))\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__getslice__'
p11
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p12
sS'text'
p13
S'None'
p14
sS'__str__'
p15
S"<method-wrapper '__str__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p16
sS'__reduce__'
p17
S'<built-in method __reduce__ of exceptions.SyntaxError object at 0x01FC0EF0>'
p18
sS'__dict__'
p19
S'{}'
p20
sS'__init__'
p21
S"<method-wrapper '__init__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p22
sS'__setattr__'
p23
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p24
sS'__reduce_ex__'
p25
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object at 0x01FC0EF0>'
p26
sS'__new__'
p27
S'<built-in method __new__ of type object at 0x1E1CDBD0>'
p28
sS'__class__'
p29
S"<type 'exceptions.SyntaxError'>"
p30
sS'filename'
p31
S'None'
p32
sS'lineno'
p33
S'None'
p34
sS'msg'
p35
S'"setting key \'rpx_key\' does not exist"'
p36
sS'__doc__'
p37
S"'Invalid syntax.'"
p38
sS'__getitem__'
p39
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p40
sS'__setstate__'
p41
S'<built-in method __setstate__ of exceptions.SyntaxError object at 0x01FC0EF0>'
p42
sS'__getattribute__'
p43
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p44
sS'print_file_and_line'
p45
S'None'
p46
sS'args'
p47
S'("setting key \'rpx_key\' does not exist",)'
p48
sS'offset'
p49
S'None'
p50
sS'__delattr__'
p51
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p52
sS'__repr__'
p53
S"<method-wrapper '__repr__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p54
sS'__hash__'
p55
S"<method-wrapper '__hash__' of exceptions.SyntaxError object at 0x01FC0EF0>"
p56
ssS'evalue'
p57
S"setting key 'rpx_key' does not exist"
p58
sS'request'
p59
(dp60
S'function'
p61
S"'index'"
p62
sS'body'
p63
S'<cStringIO.StringO object at 0x01FC3940>'
p64
sS'wsgi'
p65
S"<Storage {'start_response': <function <lambda> a...ING': 'gzip,deflate', 'HTTP_KEEP_ALIVE': '115'}}>"
p66
sS'extension'
p67
S"'html'"
p68
sS'vars'
p69
S'<Storage {}>'
p70
sS'cid'
p71
S'None'
p72
sS'url'
p73
S'<gluon.html.XML object at 0x01FC3930>'
p74
sg47
S'[]'
p75
sS'controller'
p76
S"'default'"
p77
sS'cookies'
p78
S"<SimpleCookie: _csuid='X4b88544ae5e5c07c' sessio...'127-0-0-1-920f3cd9-3e10-42b3-adf8-72b51aecbdc6'>"
p79
sS'application'
p80
S"'init'"
p81
sS'ajax'
p82
S'False'
p83
sS'client'
p84
S"'127.0.0.1'"
p85
sS'env'
p86
S"<Storage {'http_user_agent': 'Mozilla/5.0 (Windo...': '', 'wsgi_run_once': False, 'path_info': '/'}>"
p87
sS'raw_args'
p88
S'None'
p89
sS'get_vars'
p90
S'<Storage {}>'
p91
sS'folder'
p92
S"r'C:\\APPS\\augmi-a\\applications\\init/'"
p93
sS'now'
p94
S'datetime.datetime(2010, 9, 18, 23, 53, 24, 734000)'
p95
sS'post_vars'
p96
S'<Storage {}>'
p97
ssS'frames'
p98
(lp99
(dp100
S'file'
p101
S'C:\\APPS\\augmi-a\\gluon\\restricted.py'
p102
sS'dump'
p103
(dp104
S'environment'
p105
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p106
sS'ccode'
p107
S'<code object <module> at 01FBBDA0, file "C:\\APPS\\augmi-a\\applications\\init/models/db.py", line 2>'
p108
ssS'lnum'
p109
I188
sS'lines'
p110
(dp111
I192
S'        # XXX Show exception in Wing IDE if running in debugger'
p112
sI183
S'        if type(code) == types.CodeType:'
p113
sI184
S'            ccode = code'
p114
sI185
S'        else:'
p115
sI186
S'            ccode = compile2(code,layer)'
p116
sI187
S''
sI188
S'        exec ccode in environment'
p117
sI189
S'    except HTTP:'
p118
sI190
S'        raise'
p119
sI191
S'    except Exception:'
p120
ssS'call'
p121
S'(code="# coding: utf8\\nimport uuid\\nimport datetime\\nimpor...label=T(\'EMP\'),widget=slider_widget2,default=1))\\n", environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, \'CODE\': <class \'gluon.html.CODE\'>, \'CRYPT\': <class \'gluon.validators.CRYPT\'>, ...}, layer=r\'C:\\APPS\\augmi-a\\applications\\init/models/db.py\')'
p122
sS'func'
p123
S'restricted'
p124
sa(dp125
g101
S'C:\\APPS\\augmi-a\\applications\\init\\models\\db.py'
p126
sg103
(dp127
S'builtinglobals'
p128
S'<built-in function globals>'
p129
sS'RPXAuth'
p130
S"<class 'applications.init.modules.rpxauth.RPXAuth'>"
p131
sS'db'
p132
S"<SQLDB {'_connection': <sqlite3.Connection objec...me': 'TIME'}, '_migrate': True, '_pool_size': 0}>"
p133
sS'auth'
p134
S'undefined'
p135
ssg109
I33
sg110
(dp136
I32
S'from gluon.tools import *'
p137
sI33
S'auth=RPXAuth(globals(),db)                      # authentication/authorization'
p138
sI34
S"#auth.settings.hmac_key='sha512:dcda9600-d23b-4983-9951-d20342365db6'"
p139
sI35
S"auth.settings.actions_disabled=['register']                   #"
p140
sI36
S"auth.settings.rpx_key='4ef7f97b6cb5a679e4c5c486e1b7da786b88219d'"
p141
sI37
S"auth.settings.rpx_realm = 'augmi'"
p142
sI28
S'## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)'
p143
sI29
S'## - crud actions'
p144
sI30
S'## comment/uncomment as needed'
p145
sI31
S'from applications.init.modules.rpxauth import RPXAuth'
p146
ssg121
S'()'
p147
sg123
S'<module>'
p148
sa(dp149
g101
S'C:\\APPS\\augmi-a\\applications\\init\\modules\\rpxauth.py'
p150
sg103
(dp151
S'builtinNone'
p152
S'None'
p153
sS'self'
p154
S'<applications.init.modules.rpxauth.RPXAuth object at 0x01FC3DB0>'
p155
sS'self.settings.rpx_key'
p156
S'None'
p157
sS'self.settings'
p158
S"<Storage {'showid': False, 'verify_email_onaccep...me_next': <gluon.html.XML object at 0x01FCFDD0>}>"
p159
ssg109
I86
sg110
(dp160
I81
S'            self.userprofile = auth.userprofile'
p161
sI82
S'        else:'
p162
sI83
S'            self.user = None'
p163
sI84
S'            self.userprofile = None'
p164
sI85
S'            session.auth = None'
p165
sI86
S'        self.settings.rpx_key=None'
p166
sI87
S'        self.settings.rpx_language_preference=None'
p167
sI88
S'        self.settings.rpx_realm = None'
p168
sI89
S''
sI90
S'        self.settings.expiration = 2*3600'
p169
ssg121
S"(self=<applications.init.modules.rpxauth.RPXAuth object at 0x01FC3DB0>, environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}, db=<SQLDB {'_connection': <sqlite3.Connection objec...me': 'TIME'}, '_migrate': True, '_pool_size': 0}>)"
p170
sg123
g21
sa(dp171
g101
S'C:\\APPS\\augmi-a\\gluon\\storage.py'
p172
sg103
(dp173
S'builtinSyntaxError'
p174
S"<type 'exceptions.SyntaxError'>"
p175
sS'key'
p176
S"'rpx_key'"
p177
ssg109
I116
sg110
(dp178
I111
S'class Settings(Storage):'
p179
sI112
S''
sI113
S'    def __setattr__(self, key, value):'
p180
sI114
S"        if key != 'lock_keys' and self.get('lock_keys', None)\\"
p181
sI115
S'             and not key in self:'
p182
sI116
S"            raise SyntaxError, 'setting key \\'%s\\' does not exist' % key"
p183
sI117
S"        if key != 'lock_values' and self.get('lock_values', None):"
p184
sI118
S"            raise SyntaxError, 'setting value cannot be changed: %s' % key"
p185
sI119
S'        self[key] = value'
p186
sI120
S''
ssg121
S"(self=<Storage {'showid': False, 'verify_email_onaccep...me_next': <gluon.html.XML object at 0x01FCFDD0>}>, key='rpx_key', value=None)"
p187
sg123
g23
sasS'pyver'
p188
S'Python 2.5.4: C:\\Python25\\python.exe'
p189
sS'session'
p190
(dp191
S'auth'
p192
S'None'
p193
ssS'etype'
p194
S"<type 'exceptions.SyntaxError'>"
p195
sS'date'
p196
S'Sat Sep 18 23:53:24 2010'
p197
sS'response'
p198
(dp199
S'status'
p200
S'200'
p201
sg63
S'<cStringIO.StringO object at 0x01FC38E0>'
p202
sg78
S"<SimpleCookie: session_id_init='127-0-0-1-3df7b5fb-3c6c-4dd0-93be-eaa62e618e3d'>"
p203
sS'_vars'
p204
S'None'
p205
sS'menu'
p206
S'[]'
p207
sS'flash'
p208
S"''"
p209
sS'session_new'
p210
S'True'
p211
sS'_custom_rollback'
p212
S'None'
p213
sS'session_id'
p214
S"'127-0-0-1-3df7b5fb-3c6c-4dd0-93be-eaa62e618e3d'"
p215
sS'headers'
p216
S"<Storage {'Expires': 'Sat, 18 Sep 2010 22:53:24 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p217
sS'meta'
p218
S'<Storage {}>'
p219
sS'session_filename'
p220
S"r'C:\\APPS\\augmi-a\\applications\\init\\sessions\\127-0-0-1-3df7b5fb-3c6c-4dd0-93be-eaa62e618e3d'"
p221
sS'postprocessing'
p222
S'[]'
p223
sS'_caller'
p224
S'<function <lambda> at 0x01FC0270>'
p225
sS'_view_environment'
p226
S"{'A': <class 'gluon.html.A'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, 'DAL': <function DAL at 0x0189D0B0>, ...}"
p227
sS'session_id_name'
p228
S"'session_id_init'"
p229
sS'_custom_commit'
p230
S'None'
p231
sS'files'
p232
S'[]'
p233
sS'view'
p234
S"'default/index.html'"
p235
ssS'locals'
p236
(dp237
S'self'
p238
S"<Storage {'showid': False, 'verify_email_onaccep...me_next': <gluon.html.XML object at 0x01FCFDD0>}>"
p239
sS'value'
p240
S'None'
p241
sS'key'
p242
S"'rpx_key'"
p243
sssS'traceback'
p244
S'Traceback (most recent call last):\n  File "C:\\APPS\\augmi-a\\gluon\\restricted.py", line 188, in restricted\n    exec ccode in environment\n  File "C:\\APPS\\augmi-a\\applications\\init/models/db.py", line 33, in <module>\n    auth=RPXAuth(globals(),db)                      # authentication/authorization\n  File "C:\\APPS\\augmi-a\\applications\\init\\modules\\rpxauth.py", line 86, in __init__\n    self.settings.rpx_key=None\n  File "C:\\APPS\\augmi-a\\gluon\\storage.py", line 116, in __setattr__\n    raise SyntaxError, \'setting key \\\'%s\\\' does not exist\' % key\nSyntaxError: setting key \'rpx_key\' does not exist\n'
p245
s.